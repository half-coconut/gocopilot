name: build

on:
  push:
    branches:
      - 'main'

env:
  DOCKERHUB_USERNAME: halfcoconut
  BUILD: 'false'         # 默认不执行 build job
  BUILD_DOCKER: 'false'  # 新增 docker 构建开关

jobs:
  build:
    if: ${{ env.BUILD == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod download
        working-directory: ./core-engine

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start Docker Compose (for testing)
        run: docker-compose up -d
        working-directory: ./core-engine

      - name: Wait for services to be ready
        run:
          sleep 10
        working-directory: ./core-engine

      - name: Format code
        run: go fmt ./...
        working-directory: ./core-engine

      - name: Print GITHUB_WORKSPACE
        run: echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"

      - name: Run go mod tidy
        run: go mod tidy
        working-directory: ./core-engine

      - name: Run tests with coverage
        run: |
          go test -v ./... -coverprofile=coverage.out
          go tool cover -func=coverage.out
        working-directory: ./core-engine

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./core-engine/coverage.out # 指定 coverage.out 的路径
          fail_ci_if_error: true

      - name: Stop Docker Compose (after testing)
        if: always()
        run: docker-compose down
        working-directory: ./core-engine

  docker:
    if: ${{ env.BUILD_DOCKER == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build core-engine and push
        uses: docker/build-push-action@v3
        with:
          context: ./core-engine
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/core-engine:${{ steps.vars.outputs.sha_short }}

